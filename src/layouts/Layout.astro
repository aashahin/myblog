---
import { ViewTransitions } from 'astro:transitions';
import { SEO } from "astro-seo";
import Nav from "../components/Nav.astro";

interface Props {
  title: string;
  keywords: string;
  description: string;
}

const { title, keywords, description } = Astro.props;
---

<!doctype html>
<html lang="ar" dir="rtl">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <SEO
      title={title}
      description={description}
      openGraph={{
        basic: {
          title: title,
          type: "website",
          image: "/favicon.svg",
        },
        optional: {
          description: description,
        },
      }}
      extend={{
        meta: [
          { name: "keywords", content: keywords }
        ],
        link: [
          { rel: "sitemap", href: "/sitemap-index.xml" }
        ],
      }}
    />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Almarai:wght@300;400;700;800&display=swap"
      rel="stylesheet"
      media="print"
      onload="this.media='all'"
    />
    <ViewTransitions />
    <script is:inline>
      // Theme application logic (unchanged)
      function applyTheme() {
        const theme = (() => {
          if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
            return localStorage.getItem('theme');
          }
          if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
            return 'dark';
          }
          return 'light';
        })();

        if (theme === 'light') {
          document.documentElement.classList.remove('dark');
        } else {
          document.documentElement.classList.add('dark');
        }

        window.localStorage.setItem('theme', theme);
      }

      // Apply theme on initial load
      applyTheme();

      // Apply theme after view transitions
      document.addEventListener('astro:after-swap', applyTheme);
      window.addEventListener('theme-change', applyTheme);
    </script>
  </head>
  <body class="bg-white dark:bg-neutral-900 transition-colors duration-300">
    <Nav />
    <main class="container mx-auto my-16 px-4 sm:px-6 lg:px-8 flex flex-col items-center text-gray-800 dark:text-gray-200">
      <slot />
    </main>
  </body>
</html>

<style is:global>
  @tailwind base;
  @tailwind components;
  @tailwind utilities;

  :root {
    --font-almarai: 'Almarai', sans-serif;
  }

  html {
    font-family: var(--font-almarai);
    font-size: 18px;
    scroll-behavior: smooth;
  }

  body {
    @apply antialiased;
    overflow-x: hidden;
  }

  @media (prefers-reduced-motion: reduce) {
    html {
      scroll-behavior: auto;
    }
  }
</style>
