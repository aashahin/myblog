---
import Layout from "../../layouts/Layout.astro";
import { getCollection } from 'astro:content';
import { Icon } from 'astro-icon/components';

export async function getStaticPaths() {
    const posts = await getCollection('posts');
    const tags = posts.map(({data: {tags}}) => tags);
    const uniqueTags = [...new Set(tags.flat())];
    return uniqueTags.map((tag) => {
        return {
            params: {
                tag: tag
            }
        }
    });
}

const { tag } = Astro.params;
const posts = await getCollection('posts', (post) => post.data.tags.includes(tag));

const title = `مقالات عن ${tag}`;
const description = "مقالات تقنية وبرمجية في مجالات متنوعة";
const keywords = `مدونة, تقنية, برمجة, نود جي اس, جافا سكريبت, جيتسبي, جيت, ${tag}`;

// Function to group posts by year
const groupPostsByYear = (posts: any) => {
  return posts.reduce((acc: any, post: any) => {
    const year = new Date(post.data.date).getFullYear();
    if (!acc[year]) {
      acc[year] = [];
    }
    acc[year].push(post);
    return acc;
  }, {});
};

const postsByYear = groupPostsByYear(
  posts.sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime())
);
---

<Layout title={title} description={description} keywords={keywords}>
  <main class="min-h-screen text-neutral-900 dark:text-neutral-100 font-arabic relative z-10">
    <div class="container mx-auto px-4 py-16 min-w-4xl">
      <section class="text-center mb-16 relative">
        <h1 class="text-2xl sm:text-4xl font-bold mb-4 relative">
          مقالات عن {tag}
        </h1>
        <p class="text-xl text-neutral-600 dark:text-neutral-400 mb-8">
          أتمنى أن تجد هنا ما يفيدك ويساعدك في تعلم البرمجة والتقنية
        </p>
      </section>

      <div class="mb-12 relative">
        <input
          type="text"
          id="search"
          placeholder="ابحث في المقالات..."
          class="w-full p-3 rounded-lg bg-white dark:bg-neutral-800 text-neutral-900 dark:text-neutral-100 border border-neutral-300 dark:border-neutral-700 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors duration-200"
        />
        <Icon name="mdi:search" class="absolute end-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-neutral-400" />
      </div>

      {Object.entries(postsByYear).map(([year, yearPosts]: any) => (
        <section class="mb-16 relative">
          <div class="blob-animation blob-3"></div>
          <h2 class="text-2xl font-semibold text-neutral-800 dark:text-neutral-200 mb-6">
            {year}
          </h2>
          <div class="space-y-8">
            {yearPosts.map(({ data: { title, tags, date }, slug }: any) => (
              <article class="bg-white dark:bg-neutral-800 rounded-lg shadow p-6 transition-all duration-300 hover:shadow-lg hover:transform hover:-translate-y-1">
                <div class="flex flex-wrap gap-2 mb-3">
                  {tags.map((postTag: string) => (
                    <a
                      href={`/tags/${postTag}`}
                      class={`text-md px-3 py-1 rounded-xl transition-colors duration-200 ${
                        postTag === tag
                          ? 'bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200'
                          : 'bg-neutral-100 dark:bg-neutral-700 text-neutral-800 dark:text-neutral-200 hover:bg-blue-100 dark:hover:bg-blue-900'
                      }`}
                    >
                      {postTag}
                    </a>
                  ))}
                </div>
                <h3 class="text-xl font-semibold mb-2">
                  <a
                    href={`/blog/${slug}`}
                    data-astro-prefetch
                    class="text-neutral-900 dark:text-neutral-100 hover:text-blue-600 dark:hover:text-blue-400 transition-colors duration-200"
                  >
                    {title}
                  </a>
                </h3>
                <p class="text-sm text-neutral-600 dark:text-neutral-400 flex items-center gap-2">
                  <Icon name="mdi:calendar" class="w-4 h-4" />
                  {new Date(date).toLocaleDateString('ar', { year: 'numeric', month: 'long', day: 'numeric' })}
                </p>
              </article>
            ))}
          </div>
        </section>
      ))}
    </div>
  </main>
</Layout>

<script>
  const searchInput = document.getElementById('search');
  const articles = document.querySelectorAll('article');
  searchInput.addEventListener('input', (e: any) => {
    const searchTerm = e.target.value.toLowerCase();
    articles.forEach((article) => {
      const title = article.querySelector('h3').textContent.toLowerCase();
      const tags = Array.from(article.querySelectorAll('a[href^="/tags/"]')).map(tag => tag.textContent.toLowerCase());
      if (title.includes(searchTerm) || tags.some(tag => tag.includes(searchTerm))) {
        article.style.display = 'block';
      } else {
        article.style.display = 'none';
      }
    });
  });
</script>
